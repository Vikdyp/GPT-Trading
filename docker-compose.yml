services:
  postgres:
    image: postgres:15
    container_name: pro-bot-postgres
    environment:
      POSTGRES_USER: bot
      POSTGRES_PASSWORD: botpass
      POSTGRES_DB: botdb
    ports:
      - "5433:5432"                 # tu tâ€™y connectes en local sur 5433
    volumes:
      - pgdata:/var/lib/postgresql/data
      - ./db/init:/docker-entrypoint-initdb.d:ro

  adminer:
    image: adminer
    container_name: pro-bot-adminer
    environment:
      - ADMINER_DEFAULT_SERVER=postgres
    depends_on:
      - postgres
    ports:
      - "8080:8080"                 # UI DB dans le navigateur sur http://localhost:8080

  redis:
    image: redis:7
    container_name: pro-bot-redis
    ports:
      - "6379:6379"

  api:
    build: ./services/api
    container_name: pro-bot-api
    env_file:
      - .env
    environment:
      - PORT=8000
      - REDIS_URL=redis://redis:6379/0
      - DATABASE_URL=postgresql+asyncpg://bot:botpass@postgres:5432/botdb
      - CONFIG_PATH=/app/config/app.yaml
      - BINANCE_MODE=mainnet
      - LIVE_TRADING=false
      - EXECUTION_TEST_ORDERS=true
      - DISCORD_ENABLE=${DISCORD_ENABLE}
      - DISCORD_WEBHOOK_URL=${DISCORD_WEBHOOK_URL}
      - DISCORD_USERNAME=${DISCORD_USERNAME}
      - DISCORD_AVATAR_URL=${DISCORD_AVATAR_URL}

    depends_on:
      - postgres
      - redis
    ports:
      - "8000:8000"
    volumes:
      - ./config:/app/config:ro

  market_data:
    build: ./services/market_data
    container_name: pro-bot-market
    environment:
      - REDIS_URL=redis://redis:6379/0
      - CONFIG_PATH=/app/config/app.yaml
      - BINANCE_MODE=mainnet
    depends_on:
      - redis
    volumes:
      - ./config:/app/config:ro

  web_dashboard:
    build: ./services/web_dashboard
    container_name: pro-bot-ui
    environment:
      - NEXT_PUBLIC_API_BASE=http://localhost:8000
    depends_on:
      - api
    ports:
      - "3000:3000"

volumes:
  pgdata: {}
